sudo: required
language: node_js
node_js: '12'

matrix:
  include:
    - os: osx
      osx_image: xcode10
      addons:
        chrome: stable
      before_install:
        - openssl aes-256-cbc -K $encrypted_527645209bb0_key -iv $encrypted_527645209bb0_iv -in build/mac-cert.tar.enc -out mac-cert.tar -d
        - tar xvf mac-cert.tar

    - os: linux
      dist: xenial
      language: generic
      services:
        - docker
#      before_install:
#        - sudo snap install snapcraft --classic
#        - export CHROME_BIN=chromium-browser
#        - export DISPLAY=:99.0
#        - sh -e /etc/init.d/xvfb start

addons:
  ssh_known_hosts:
    - the-front-end.de
    - frs.sourceforge.net
  apt:
    packages:
      - sshpass

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

cache:
  yarn: true
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
    - $HOME/.npm/_prebuilds

script:
  - |
    if [ -n "$TRAVIS_TAG" ]; then
      PUB=always
    else
      PUB=never
    fi
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      echo '____RUNNING DOCKER____'
      docker run $ENVS --rm \
        $(env | \
        grep -Eo '^[^\s=]*(_TOKEN|_KEY)[^\s=]*' | \
        sed '/^$/d;s/^/-e /' | \
        paste -sd ' ' \
        ) \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine-chrome \
        /bin/bash -c "echo '____DOCKER_INNER_START____' && ls -l && yarn --link-duplicates --pure-lockfile && yarn run dist:linuxAndWin -p ${PUB} && ls -l ./dist"
    else
      yarn install && yarn add 7zip-bin-mac
      yarn run buildAllElectron
      travis_wait 30 yarn dist:mac:dl -p $PUB
    fi

# NOTE: disabled until next release of electron builder
#      if [ -n "$TRAVIS_TAG" ]; then
#        yarn dist:mac:mas
#      fi

before_deploy:
  - sudo apt-get update -qq
  - sudo apt-get install snapd

deploy:
  # we use edge because of this: https://travis-ci.community/t/snap-deployment-stopped-working-out-of-nowhere/6908/2
  - edge: true
    provider: snap
    snap: ./app-builds/*.snap
    channel: edge
    skip_cleanup: true
    on:
      condition: $TRAVIS_OS_NAME = linux
  - provider: snap
    snap: ./app-builds/*.snap
    channel: candidate
    skip_cleanup: true
    on:
      branch: master
      condition: $TRAVIS_OS_NAME = linux
      tags: true
  - provider: script
    script: sshpass -p "$DEPLOY_PASS" rsync -avz ./dist $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    skip_cleanup: true
    on:
      branch: master
      condition: $TRAVIS_OS_NAME = linux
      tags: true
# NOTE: disabled until next release of electron builder
#  - provider: script
#    script: xcrun altool --upload-app -f app-builds/mas/superProductivity-*.pkg -u "${APPLEID}" -p "${APPLEIDPASS}"
#    skip_cleanup: true
#    on:
#      branch: master
#      condition: $TRAVIS_OS_NAME = osx
#      tags: true


# NOTE: this would only work, if we could auto publish the github draft
#  - provider: script
#    script: brew update && brew install vitorgalvao/tiny-scripts/cask-repair && openssl aes-256-cbc -K $encrypted_c04542ca1075_key -iv $encrypted_c04542ca1075_iv -in build/hub.enc -out ~/.config/hub -d && cask-repair -b -v $TRAVIS_TAG superproductivity
#    skip_cleanup: true
#    on:
#      branch: master
#      condition: $TRAVIS_OS_NAME = osx
#      tags: true
